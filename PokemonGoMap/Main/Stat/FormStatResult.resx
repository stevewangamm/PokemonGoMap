<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        J6pqVc6ka9IAAAAASUVORK5CYII=
</value>
  </data>
</root>